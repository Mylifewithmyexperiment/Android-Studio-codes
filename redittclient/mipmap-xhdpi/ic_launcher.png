package com.example.jiosecure;

import android.content.Intent;
import android.content.res.AssetManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.security.KeyManagementException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.Certificate;
import java.security.cert.CertificateException;
import java.security.cert.CertificateFactory;
import java.util.Iterator;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSession;
import javax.net.ssl.TrustManagerFactory;

public class OtpScreen extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState)  // this is a oncreate method if you need to make other method you must create method outside this

    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_otp_screen);
        this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

         TextView otp_sent = findViewById(R.id.otpSent);

         String otpSentDetails = otp_sent.getText().toString();

       String last_4_digits = getIntent().getStringExtra("Last4Digit");


        otpSentDetails= otpSentDetails+last_4_digits;
        Toast.makeText(getApplicationContext(), "otp sent :-"+otpSentDetails, Toast.LENGTH_SHORT).show();
        otp_sent.setText(otpSentDetails);

        

        Button verify =  findViewById(R.id.verify);
        verify.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Thread doInBack_netowrk_operation = new Thread(new Runnable() {
                    @Override
                    public void run() {
                        doInBackground();
                    }
                });
                doInBack_netowrk_operation.start();


            }
        });




        verify.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {


                Intent i = new Intent(OtpScreen.this, HomeScreen.class);
                startActivity(i);


            }
        });








    }


    public void goingToLoginActivity(View view)
    {

        Intent i = new Intent(OtpScreen.this,LoginScreen.class);
        startActivity(i);
    }








    protected String doInBackground(String... strings)
    {


        Log.i("enter","In do in background method");


        // certificate type things

        SSLContext context = null;
        HostnameVerifier hostnameVerifier = null;
        try {
            CertificateFactory cf = CertificateFactory.getInstance("X.509");
            AssetManager assetManager = getResources().getAssets();
            InputStream caInput = assetManager.open("sslnbiot.cer");
            Certificate ca= cf.generateCertificate(caInput);


            String keyStoreType = KeyStore.getDefaultType();
            KeyStore keyStore = KeyStore.getInstance(keyStoreType);
            keyStore.load(null, null);
            keyStore.setCertificateEntry("ca", ca);


            String tmfAlgorithm = TrustManagerFactory.getDefaultAlgorithm();
            TrustManagerFactory tmf = TrustManagerFactory.getInstance(tmfAlgorithm);
            tmf.init(keyStore);


            context = SSLContext.getInstance("TLS");
            context.init(null, tmf.getTrustManagers(), null);

            hostnameVerifier = new HostnameVerifier() {
                @Override
                public boolean verify(String hostname, SSLSession session) {
                    HostnameVerifier hv = HttpsURLConnection.getDefaultHostnameVerifier();
                    return 